{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\\\u05D3\\u05E0\\u05D4 \\u05E4\\u05E1\\u05D7\\\\Desktop\\\\FinalProject\\\\New\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\\\u05D3\\u05E0\\u05D4 \\u05E4\\u05E1\\u05D7\\\\Desktop\\\\FinalProject\\\\New\\\\final\\\\src\\\\operationSystem\\\\MessageWindow\\\\TextScroller.jsx\";\nimport React, { useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\n\nconst TextScroller = ({\n  text\n}) => {\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        key = _useState2[0],\n        setKey = _useState2[1];\n\n  const scrolling = useSpring({\n    from: {\n      transform: \"translate(60%,0)\"\n    },\n    to: {\n      transform: \"translate(-60%,0)\"\n    },\n    config: {\n      duration: 20000\n    },\n    reset: true,\n    //reverse: key % 2 == 0,\n    onRest: () => {\n      setKey(key + 1);\n    }\n  });\n  return React.createElement(\"div\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(animated.div, {\n    style: scrolling,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, text));\n};\n\nexport default TextScroller;","map":{"version":3,"sources":["C:/Users/דנה פסח/Desktop/FinalProject/New/final/src/operationSystem/MessageWindow/TextScroller.jsx"],"names":["React","useState","useSpring","animated","TextScroller","text","key","setKey","scrolling","from","transform","to","config","duration","reset","onRest"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA,oBACXJ,QAAQ,CAAC,CAAD,CADG;AAAA;AAAA,QAC1BK,GAD0B;AAAA,QACrBC,MADqB;;AAGjC,QAAMC,SAAS,GAAGN,SAAS,CAAC;AAC1BO,IAAAA,IAAI,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADoB;AAE1BC,IAAAA,EAAE,EAAE;AAAED,MAAAA,SAAS,EAAE;AAAb,KAFsB;AAG1BE,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAHkB;AAI1BC,IAAAA,KAAK,EAAE,IAJmB;AAK1B;AACAC,IAAAA,MAAM,EAAE,MAAM;AACZR,MAAAA,MAAM,CAACD,GAAG,GAAG,CAAP,CAAN;AACD;AARyB,GAAD,CAA3B;AAWA,SACE;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAEE,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCH,IAAjC,CADF,CADF;AAKD,CAnBD;;AAqBA,eAAeD,YAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\n\r\nconst TextScroller = ({ text }) => {\r\n  const [key, setKey] = useState(1);\r\n\r\n  const scrolling = useSpring({\r\n    from: { transform: \"translate(60%,0)\" },\r\n    to: { transform: \"translate(-60%,0)\" },\r\n    config: { duration: 20000 },\r\n    reset: true,\r\n    //reverse: key % 2 == 0,\r\n    onRest: () => {\r\n      setKey(key + 1);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div key={key}>\r\n      <animated.div style={scrolling}>{text}</animated.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextScroller;\r\n    "]},"metadata":{},"sourceType":"module"}