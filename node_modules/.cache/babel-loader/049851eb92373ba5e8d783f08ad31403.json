{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\u05D3\\u05E0\\u05D4 \\u05E4\\u05E1\\u05D7\\\\Desktop\\\\FinalProject\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { CONSTANTS } from \"../Actions\";\nimport * as moment from 'moment';\nlet listIDNew = 3;\nconst initialState = {\n  title: \"This is the title\",\n  OperationList: [{\n    listID: 0,\n    title: 'First List',\n    cards: [{\n      id: 0\n    }, {\n      id: 1\n    }]\n  }, {\n    listID: 1,\n    title: 'Second List',\n    cards: [{\n      id: 0\n    }, {\n      id: 1\n    }]\n  }],\n  StatusList: [{\n    listID: 0,\n    listTitle: 'שדה',\n    cards: [{\n      cardTitle: ' אדרת 5',\n      cardID: 0,\n      buttons: [{\n        id: 1,\n        titleButton: '5י'\n      }, {\n        id: 2,\n        titleButton: '2.4'\n      }, {\n        id: 1,\n        titleButton: '5ח\\''\n      }]\n    }, {\n      cardTitle: 'אדרת 3',\n      cardID: 1,\n      buttons: [{\n        id: 1,\n        titleButton: '5'\n      }, {\n        id: 2,\n        titleButton: '2.4'\n      }]\n    }]\n  }, {\n    listID: 1,\n    listTitle: 'מערכות חיצוניות',\n    cards: [{\n      cardTitle: 'יארד',\n      cardID: 0,\n      buttons: [{\n        id: 1,\n        titleButton: '1'\n      }]\n    }]\n  }],\n  lists: {\n    startTimer: moment({\n      hours: 19,\n      minutes: 30\n    }),\n    cardsLists: [{\n      title: \" laist 1 \",\n      id: 'list-${0}',\n      cards: [{\n        id: 'cards-${0}',\n        text: \"we created a static list&card 0 \",\n        duration: moment.duration(53, 'minutes')\n      }, {\n        id: 'cards-${1}',\n        text: \"we created a static list&card 1 \",\n        duration: moment.duration(30, 'minutes')\n      }]\n    }, {\n      title: \" list 2 \",\n      id: 'list-${1}',\n      cards: [{\n        id: 'cards-${2}',\n        text: \"test 1 \",\n        duration: moment.duration(30, 'minutes')\n      }, {\n        id: 'cards-${3}',\n        text: \"test 2 \",\n        duration: moment.duration(30, 'minutes')\n      }, {\n        id: 'cards-${4}',\n        text: \"test 3 \",\n        duration: moment.duration(30, 'minutes')\n      }, {\n        id: 'cards-${5}',\n        text: \"test 4 \",\n        duration: moment.duration(30, 'minutes')\n      }]\n    }]\n  }\n};\n\nconst OperationReducer = (state = initialState, action) => {\n  let listID = 3;\n\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST_OPERATION:\n      const newList = {\n        listID: listIDNew,\n        title: \"List num\" + listIDNew,\n        cards: []\n      };\n      listIDNew++;\n      return _objectSpread({}, state, {\n        OperationList: [...state.OperationList, newList]\n      });\n\n    case CONSTANTS.ADD_CARD_OPERATION:\n      {\n        const newCard = {\n          id: 4\n        };\n        const newOperationList = state.OperationList.map(list => {\n          if (list.listID === action.payload.listID) {\n            return _objectSpread({}, list, {\n              cards: [...list.cards, newCard]\n            });\n          } else {\n            return list;\n          }\n        });\n        return _objectSpread({}, state, {\n          OperationList: newOperationList\n        });\n      }\n  }\n\n  return state;\n};\n\nexport default OperationReducer;","map":{"version":3,"sources":["C:/Users/דנה פסח/Desktop/FinalProject/final/src/reducers/OperationReducer.js"],"names":["CONSTANTS","moment","listIDNew","initialState","title","OperationList","listID","cards","id","StatusList","listTitle","cardTitle","cardID","buttons","titleButton","lists","startTimer","hours","minutes","cardsLists","text","duration","OperationReducer","state","action","type","ADD_LIST_OPERATION","newList","ADD_CARD_OPERATION","newCard","newOperationList","map","list","payload"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,YAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AAEA,IAAIC,SAAS,GAAC,CAAd;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,mBADU;AAEjBC,EAAAA,aAAa,EAAE,CACZ;AACIC,IAAAA,MAAM,EAAC,CADX;AAEIF,IAAAA,KAAK,EAAE,YAFX;AAGIG,IAAAA,KAAK,EAAC,CACF;AAACC,MAAAA,EAAE,EAAC;AAAJ,KADE,EAEF;AAACA,MAAAA,EAAE,EAAC;AAAJ,KAFE;AAHV,GADY,EASZ;AACCF,IAAAA,MAAM,EAAC,CADR;AAECF,IAAAA,KAAK,EAAE,aAFR;AAGCG,IAAAA,KAAK,EAAC,CACF;AAACC,MAAAA,EAAE,EAAC;AAAJ,KADE,EAEF;AAACA,MAAAA,EAAE,EAAC;AAAJ,KAFE;AAHP,GATY,CAFE;AAoBjBC,EAAAA,UAAU,EAAE,CACR;AACIH,IAAAA,MAAM,EAAC,CADX;AAEII,IAAAA,SAAS,EAAE,KAFf;AAGIH,IAAAA,KAAK,EAAC,CACF;AACAI,MAAAA,SAAS,EAAE,SADX;AAEAC,MAAAA,MAAM,EAAC,CAFP;AAGAC,MAAAA,OAAO,EAAC,CACA;AAACL,QAAAA,EAAE,EAAC,CAAJ;AAAMM,QAAAA,WAAW,EAAC;AAAlB,OADA,EAEA;AAACN,QAAAA,EAAE,EAAC,CAAJ;AAAMM,QAAAA,WAAW,EAAC;AAAlB,OAFA,EAGA;AAACN,QAAAA,EAAE,EAAC,CAAJ;AAAMM,QAAAA,WAAW,EAAC;AAAlB,OAHA;AAHR,KADE,EAUF;AACIH,MAAAA,SAAS,EAAE,QADf;AAEIC,MAAAA,MAAM,EAAC,CAFX;AAGIC,MAAAA,OAAO,EAAC,CACA;AAACL,QAAAA,EAAE,EAAC,CAAJ;AAAMM,QAAAA,WAAW,EAAC;AAAlB,OADA,EAEA;AAACN,QAAAA,EAAE,EAAC,CAAJ;AAAMM,QAAAA,WAAW,EAAC;AAAlB,OAFA;AAHZ,KAVE;AAHV,GADQ,EAwBP;AACAR,IAAAA,MAAM,EAAC,CADP;AAEGI,IAAAA,SAAS,EAAE,iBAFd;AAGGH,IAAAA,KAAK,EAAC,CACF;AACAI,MAAAA,SAAS,EAAE,MADX;AAEAC,MAAAA,MAAM,EAAC,CAFP;AAGAC,MAAAA,OAAO,EAAC,CACA;AAACL,QAAAA,EAAE,EAAC,CAAJ;AAAMM,QAAAA,WAAW,EAAC;AAAlB,OADA;AAHR,KADE;AAHT,GAxBO,CApBK;AA2DhBC,EAAAA,KAAK,EACF;AACJC,IAAAA,UAAU,EAAEf,MAAM,CAAC;AAACgB,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,OAAO,EAAE;AAArB,KAAD,CADd;AAEJC,IAAAA,UAAU,EAAE,CACZ;AACIf,MAAAA,KAAK,EAAG,WADZ;AAEII,MAAAA,EAAE,EAAE,WAFR;AAGID,MAAAA,KAAK,EAAE,CACP;AAAIC,QAAAA,EAAE,EAAC,YAAP;AACIY,QAAAA,IAAI,EAAE,kCADV;AAEIC,QAAAA,QAAQ,EAAEpB,MAAM,CAACoB,QAAP,CAAgB,EAAhB,EAAoB,SAApB;AAFd,OADO,EAKP;AAAIb,QAAAA,EAAE,EAAE,YAAR;AACAY,QAAAA,IAAI,EAAE,kCADN;AAEAC,QAAAA,QAAQ,EAAEpB,MAAM,CAACoB,QAAP,CAAgB,EAAhB,EAAoB,SAApB;AAFV,OALO;AAHX,KADY,EAeZ;AACIjB,MAAAA,KAAK,EAAG,UADZ;AAEII,MAAAA,EAAE,EAAE,WAFR;AAGID,MAAAA,KAAK,EAAE,CACH;AAAIC,QAAAA,EAAE,EAAE,YAAR;AACIY,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,QAAQ,EAAEpB,MAAM,CAACoB,QAAP,CAAgB,EAAhB,EAAoB,SAApB;AAFd,OADG,EAKH;AAAIb,QAAAA,EAAE,EAAE,YAAR;AACIY,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,QAAQ,EAAEpB,MAAM,CAACoB,QAAP,CAAgB,EAAhB,EAAoB,SAApB;AAFd,OALG,EASH;AAAIb,QAAAA,EAAE,EAAE,YAAR;AACIY,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,QAAQ,EAAEpB,MAAM,CAACoB,QAAP,CAAgB,EAAhB,EAAoB,SAApB;AAFd,OATG,EAaH;AAAIb,QAAAA,EAAE,EAAE,YAAR;AACIY,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,QAAQ,EAAEpB,MAAM,CAACoB,QAAP,CAAgB,EAAhB,EAAoB,SAApB;AAFd,OAbG;AAHX,KAfY;AAFR;AA5Da,CAArB;;AA2GA,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGpB,YAAT,EAAuBqB,MAAvB,KAAiC;AACtD,MAAIlB,MAAM,GAAC,CAAX;;AACA,UAAOkB,MAAM,CAACC,IAAd;AACA,SAAKzB,SAAS,CAAC0B,kBAAf;AACI,YAAMC,OAAO,GAAG;AACZrB,QAAAA,MAAM,EAAGJ,SADG;AAEZE,QAAAA,KAAK,EAAC,aAAWF,SAFL;AAGZK,QAAAA,KAAK,EAAE;AAHK,OAAhB;AAKAL,MAAAA,SAAS;AACb,+BAAWqB,KAAX;AAAiBlB,QAAAA,aAAa,EAAE,CAAC,GAAGkB,KAAK,CAAClB,aAAV,EAAyBsB,OAAzB;AAAhC;;AAEA,SAAK3B,SAAS,CAAC4B,kBAAf;AAAkC;AAC9B,cAAMC,OAAO,GAAG;AACZrB,UAAAA,EAAE,EAAC;AADS,SAAhB;AAID,cAAMsB,gBAAgB,GAAEP,KAAK,CAAClB,aAAN,CAAoB0B,GAApB,CAAyBC,IAAI,IAAI;AACpD,cAAGA,IAAI,CAAC1B,MAAL,KAAgBkB,MAAM,CAACS,OAAP,CAAe3B,MAAlC,EAAyC;AACrC,qCACO0B,IADP;AAEIzB,cAAAA,KAAK,EAAC,CAAC,GAAGyB,IAAI,CAACzB,KAAT,EAAgBsB,OAAhB;AAFV;AAIH,WALD,MAKK;AACD,mBAAOG,IAAP;AACH;AACJ,SATsB,CAAxB;AAWC,iCAAWT,KAAX;AAAkBlB,UAAAA,aAAa,EAAEyB;AAAjC;AACC;AA3BL;;AAgCA,SAAOP,KAAP;AACH,CAnCD;;AAqCA,eAAeD,gBAAf","sourcesContent":["import {CONSTANTS} from \"../Actions\";\r\nimport * as moment from 'moment';\r\n\r\nlet listIDNew=3;\r\nconst initialState = {\r\n    title: \"This is the title\",\r\n    OperationList: [\r\n       {\r\n           listID:0,\r\n           title: 'First List',\r\n           cards:[\r\n               {id:0},\r\n               {id:1}\r\n           ]\r\n       },\r\n       {\r\n        listID:1,\r\n        title: 'Second List',\r\n        cards:[\r\n            {id:0},\r\n            {id:1}\r\n        ]\r\n        }\r\n    ],\r\n    StatusList: [\r\n        {\r\n            listID:0,\r\n            listTitle: 'שדה',\r\n            cards:[\r\n                {\r\n                cardTitle: ' אדרת 5',\r\n                cardID:0,\r\n                buttons:[\r\n                        {id:1,titleButton:'5י'},\r\n                        {id:2,titleButton:'2.4'},\r\n                        {id:1,titleButton:'5ח\\''}\r\n                    ]\r\n                },\r\n                {\r\n                    cardTitle: 'אדרת 3',\r\n                    cardID:1,\r\n                    buttons:[\r\n                            {id:1,titleButton:'5'},\r\n                            {id:2,titleButton:'2.4'},\r\n                        ]\r\n                    }\r\n               ]\r\n         },\r\n         {\r\n         listID:1,\r\n            listTitle: 'מערכות חיצוניות',\r\n            cards:[\r\n                {\r\n                cardTitle: 'יארד',\r\n                cardID:0,\r\n                buttons:[\r\n                        {id:1,titleButton:'1'},\r\n                    ]\r\n                },\r\n\r\n               ]\r\n         }\r\n     ],\r\n     lists:\r\n        {\r\n    startTimer: moment({hours: 19, minutes: 30}),\r\n    cardsLists: [\r\n    {\r\n        title:  \" laist 1 \",\r\n        id: 'list-${0}',\r\n        cards: [\r\n        {   id:'cards-${0}',\r\n            text: \"we created a static list&card 0 \" ,\r\n            duration: moment.duration(53, 'minutes'),\r\n        },\r\n        {   id: 'cards-${1}',\r\n        text: \"we created a static list&card 1 \",\r\n        duration: moment.duration(30, 'minutes'),\r\n    },\r\n        ]\r\n    },\r\n    {\r\n        title:  \" list 2 \",\r\n        id: 'list-${1}',\r\n        cards: [\r\n            {   id: 'cards-${2}',\r\n                text: \"test 1 \" ,\r\n                duration: moment.duration(30, 'minutes'),\r\n            },\r\n            {   id: 'cards-${3}',\r\n                text: \"test 2 \",\r\n                duration: moment.duration(30, 'minutes'),\r\n            },\r\n            {   id: 'cards-${4}',\r\n                text: \"test 3 \",\r\n                duration: moment.duration(30, 'minutes'),\r\n            },\r\n            {   id: 'cards-${5}',\r\n                text: \"test 4 \",\r\n                duration: moment.duration(30, 'minutes'),\r\n            },\r\n        ]\r\n    }\r\n   \r\n    ]   \r\n    }\r\n    \r\n     \r\n     \r\n}\r\n\r\nconst OperationReducer = (state = initialState, action) =>{\r\n    let listID=3;\r\n    switch(action.type){\r\n    case CONSTANTS.ADD_LIST_OPERATION:\r\n        const newList = {\r\n            listID : listIDNew, \r\n            title:\"List num\"+listIDNew,\r\n            cards: [] , \r\n        }\r\n        listIDNew++; \r\n    return {...state,OperationList: [...state.OperationList, newList]};\r\n    \r\n    case CONSTANTS.ADD_CARD_OPERATION:{\r\n        const newCard = {\r\n            id:4\r\n        } \r\n       \r\n       const newOperationList= state.OperationList.map (list => {\r\n            if(list.listID === action.payload.listID){\r\n                return{\r\n                    ...list,\r\n                    cards:[...list.cards, newCard]\r\n                }\r\n            }else{\r\n                return list;\r\n            }\r\n        });   \r\n\r\n        return {...state, OperationList: newOperationList};\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default OperationReducer;"]},"metadata":{},"sourceType":"module"}