{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\u05D3\\u05E0\\u05D4 \\u05E4\\u05E1\\u05D7\\\\Desktop\\\\FinalProject\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { CONSTANTS } from \"../Actions\";\nimport * as moment from 'moment';\nlet listIDNew = 3; // const initialState = {\n//     title: \"This is the title\",\n//     OperationList: [\n//        {\n//            listID:0,\n//            title: 'First List',\n//            cards:[\n//                {id:0},\n//                {id:1}\n//            ]\n//        },\n//        {\n//         listID:1,\n//         title: 'Second List',\n//         cards:[\n//             {id:0},\n//             {id:1}\n//         ]\n//         }\n//     ],\n//     StatusList: [\n//         {\n//             listID:0,\n//             listTitle: 'First List',\n//             cards:[\n//                 {\n//                 cardTitle: 'First Card',\n//                 cardID:0,\n//                 buttons:[\n//                         {id:1,titleButton:'1'},\n//                         {id:2,titleButton:'2'},\n//                         {id:1,titleButton:'1'},\n//                         {id:2,titleButton:'2'},\n//                         {id:1,titleButton:'1'},\n//                         {id:2,titleButton:'2'},\n//                     ]\n//                 },\n//                 {\n//                     cardTitle: 'Second Card',\n//                     cardID:0,\n//                     buttons:[\n//                             {id:1,titleButton:'3'},\n//                             {id:2,titleButton:'4'},\n//                         ]\n//                     }\n//                ]\n//          },\n//          {\n//          listID:1,\n//             listTitle: 'Second List',\n//             cards:[\n//                 {\n//                 cardTitle: 'First Card',\n//                 cardID:0,\n//                 buttons:[\n//                         {id:1,titleButton:'1'},\n//                         {id:2,titleButton:'2'},\n//                     ]\n//                 },\n//                 {\n//                     cardTitle: 'Second Card',\n//                     cardID:0,\n//                     buttons:[\n//                             {id:1,titleButton:'3'},\n//                             {id:2,titleButton:'4'},\n//                         ]\n//                     }\n//                ]\n//          }\n//      ],\n//      lists:\n//         {\n//     startTimer: moment({hours: 19, minutes: 30}),\n//     cardsLists: [\n//     {\n//         title:  \" list 1 \",\n//         id: 'list-${0}',\n//         cards: [\n//         {   id:'cards-${0}',\n//             text: \"we created a static list&card 0 \" ,\n//             duration: moment.duration(53, 'minutes'),\n//         },\n//         {   id: 'cards-${1}',\n//         text: \"we created a static list&card 1 \",\n//         duration: moment.duration(30, 'minutes'),\n//     },\n//         ]\n//     },\n//     {\n//         title:  \" list 2 \",\n//         id: 'list-${1}',\n//         cards: [\n//             {   id: 'cards-${2}',\n//                 text: \"test 1 \" ,\n//                 duration: moment.duration(30, 'minutes'),\n//             },\n//             {   id: 'cards-${3}',\n//                 text: \"test 2 \",\n//                 duration: moment.duration(30, 'minutes'),\n//             },\n//             {   id: 'cards-${4}',\n//                 text: \"test 3 \",\n//                 duration: moment.duration(30, 'minutes'),\n//             },\n//             {   id: 'cards-${5}',\n//                 text: \"test 4 \",\n//                 duration: moment.duration(30, 'minutes'),\n//             },\n//         ]\n//     }\n//     ]   \n//     }\n// }\n\nconst OperationReducer = (state = initialState, action) => {\n  let listID = 3;\n\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST_OPERATION:\n      const newList = {\n        listID: listIDNew,\n        title: \"List num\" + listIDNew,\n        cards: []\n      };\n      listIDNew++;\n      return _objectSpread({}, state, {\n        OperationList: [...state.OperationList, newList]\n      });\n\n    case CONSTANTS.ADD_CARD_OPERATION:\n      {\n        const newCard = {\n          id: 4\n        };\n        const newOperationList = state.OperationList.map(list => {\n          if (list.listID === action.payload.listID) {\n            return _objectSpread({}, list, {\n              cards: [...list.cards, newCard]\n            });\n          } else {\n            return list;\n          }\n        });\n        return _objectSpread({}, state, {\n          OperationList: newOperationList\n        });\n      }\n  }\n\n  return state;\n};\n\nexport default OperationReducer;","map":{"version":3,"sources":["C:/Users/דנה פסח/Desktop/FinalProject/final/src/reducers/OperationReducer.js"],"names":["CONSTANTS","moment","listIDNew","OperationReducer","state","initialState","action","listID","type","ADD_LIST_OPERATION","newList","title","cards","OperationList","ADD_CARD_OPERATION","newCard","id","newOperationList","map","list","payload"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,YAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AAEA,IAAIC,SAAS,GAAC,CAAdgBAAgB,GAAG,CAACC,KAAK,GAAGC,YAAT,EAAuBC,MAAvB,KAAiC;AACtD,MAAIC,MAAM,GAAC,CAAX;;AACA,UAAOD,MAAM,CAACE,IAAd;AACA,SAAKR,SAAS,CAACS,kBAAf;AACI,YAAMC,OAAO,GAAG;AACZH,QAAAA,MAAM,EAAGL,SADG;AAEZS,QAAAA,KAAK,EAAC,aAAWT,SAFL;AAGZU,QAAAA,KAAK,EAAE;AAHK,OAAhB;AAKAV,MAAAA,SAAS;AACb,+BAAWE,KAAX;AAAiBS,QAAAA,aAAa,EAAE,CAAC,GAAGT,KAAK,CAACS,aAAV,EAAyBH,OAAzB;AAAhC;;AAEA,SAAKV,SAAS,CAACc,kBAAf;AAAkC;AAC9B,cAAMC,OAAO,GAAG;AACZC,UAAAA,EAAE,EAAC;AADS,SAAhB;AAID,cAAMC,gBAAgB,GAAEb,KAAK,CAACS,aAAN,CAAoBK,GAApB,CAAyBC,IAAI,IAAI;AACpD,cAAGA,IAAI,CAACZ,MAAL,KAAgBD,MAAM,CAACc,OAAP,CAAeb,MAAlC,EAAyC;AACrC,qCACOY,IADP;AAEIP,cAAAA,KAAK,EAAC,CAAC,GAAGO,IAAI,CAACP,KAAT,EAAgBG,OAAhB;AAFV;AAIH,WALD,MAKK;AACD,mBAAOI,IAAP;AACH;AACJ,SATsB,CAAxB;AAWC,iCAAWf,KAAX;AAAkBS,UAAAA,aAAa,EAAEI;AAAjC;AACC;AA3BL;;AAgCA,SAAOb,KAAP;AACH,CAnCD;;AAqCA,eAAeD,gBAAf","sourcesContent":["import {CONSTANTS} from \"../Actions\";\r\nimport * as moment from 'moment';\r\n\r\nlet listIDNew=3;\r\n// const initialState = {\r\n//     title: \"This is the title\",\r\n//     OperationList: [\r\n//        {\r\n//            listID:0,\r\n//            title: 'First List',\r\n//            cards:[\r\n//                {id:0},\r\n//                {id:1}\r\n//            ]\r\n//        },\r\n//        {\r\n//         listID:1,\r\n//         title: 'Second List',\r\n//         cards:[\r\n//             {id:0},\r\n//             {id:1}\r\n//         ]\r\n//         }\r\n//     ],\r\n//     StatusList: [\r\n//         {\r\n//             listID:0,\r\n//             listTitle: 'First List',\r\n//             cards:[\r\n//                 {\r\n//                 cardTitle: 'First Card',\r\n//                 cardID:0,\r\n//                 buttons:[\r\n//                         {id:1,titleButton:'1'},\r\n//                         {id:2,titleButton:'2'},\r\n//                         {id:1,titleButton:'1'},\r\n//                         {id:2,titleButton:'2'},\r\n//                         {id:1,titleButton:'1'},\r\n//                         {id:2,titleButton:'2'},\r\n//                     ]\r\n//                 },\r\n//                 {\r\n//                     cardTitle: 'Second Card',\r\n//                     cardID:0,\r\n//                     buttons:[\r\n//                             {id:1,titleButton:'3'},\r\n//                             {id:2,titleButton:'4'},\r\n//                         ]\r\n//                     }\r\n//                ]\r\n//          },\r\n//          {\r\n//          listID:1,\r\n//             listTitle: 'Second List',\r\n//             cards:[\r\n//                 {\r\n//                 cardTitle: 'First Card',\r\n//                 cardID:0,\r\n//                 buttons:[\r\n//                         {id:1,titleButton:'1'},\r\n//                         {id:2,titleButton:'2'},\r\n//                     ]\r\n//                 },\r\n//                 {\r\n//                     cardTitle: 'Second Card',\r\n//                     cardID:0,\r\n//                     buttons:[\r\n//                             {id:1,titleButton:'3'},\r\n//                             {id:2,titleButton:'4'},\r\n//                         ]\r\n//                     }\r\n//                ]\r\n//          }\r\n//      ],\r\n//      lists:\r\n//         {\r\n//     startTimer: moment({hours: 19, minutes: 30}),\r\n//     cardsLists: [\r\n//     {\r\n//         title:  \" list 1 \",\r\n//         id: 'list-${0}',\r\n//         cards: [\r\n//         {   id:'cards-${0}',\r\n//             text: \"we created a static list&card 0 \" ,\r\n//             duration: moment.duration(53, 'minutes'),\r\n//         },\r\n//         {   id: 'cards-${1}',\r\n//         text: \"we created a static list&card 1 \",\r\n//         duration: moment.duration(30, 'minutes'),\r\n//     },\r\n//         ]\r\n//     },\r\n//     {\r\n//         title:  \" list 2 \",\r\n//         id: 'list-${1}',\r\n//         cards: [\r\n//             {   id: 'cards-${2}',\r\n//                 text: \"test 1 \" ,\r\n//                 duration: moment.duration(30, 'minutes'),\r\n//             },\r\n//             {   id: 'cards-${3}',\r\n//                 text: \"test 2 \",\r\n//                 duration: moment.duration(30, 'minutes'),\r\n//             },\r\n//             {   id: 'cards-${4}',\r\n//                 text: \"test 3 \",\r\n//                 duration: moment.duration(30, 'minutes'),\r\n//             },\r\n//             {   id: 'cards-${5}',\r\n//                 text: \"test 4 \",\r\n//                 duration: moment.duration(30, 'minutes'),\r\n//             },\r\n//         ]\r\n//     }\r\n   \r\n//     ]   \r\n//     }\r\n    \r\n     \r\n     \r\n// }\r\n\r\nconst OperationReducer = (state = initialState, action) =>{\r\n    let listID=3;\r\n    switch(action.type){\r\n    case CONSTANTS.ADD_LIST_OPERATION:\r\n        const newList = {\r\n            listID : listIDNew, \r\n            title:\"List num\"+listIDNew,\r\n            cards: [] , \r\n        }\r\n        listIDNew++; \r\n    return {...state,OperationList: [...state.OperationList, newList]};\r\n    \r\n    case CONSTANTS.ADD_CARD_OPERATION:{\r\n        const newCard = {\r\n            id:4\r\n        } \r\n       \r\n       const newOperationList= state.OperationList.map (list => {\r\n            if(list.listID === action.payload.listID){\r\n                return{\r\n                    ...list,\r\n                    cards:[...list.cards, newCard]\r\n                }\r\n            }else{\r\n                return list;\r\n            }\r\n        });   \r\n\r\n        return {...state, OperationList: newOperationList};\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default OperationReducer;"]},"metadata":{},"sourceType":"module"}