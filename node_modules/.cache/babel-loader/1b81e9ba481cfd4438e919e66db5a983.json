{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\\\u05D3\\u05E0\\u05D4 \\u05E4\\u05E1\\u05D7\\\\Desktop\\\\FinalProject\\\\final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { CONSTANTS } from \"../Actions\";\nconst initialState = {\n  title: \"This is the title\",\n  OperationList: [{\n    id: 0,\n    title: 'First List',\n    cards: [{\n      id: 0\n    }, {\n      id: 1\n    }]\n  }, {\n    id: 1,\n    title: 'Second List',\n    cards: [{\n      id: 0\n    }, {\n      id: 1\n    }]\n  }]\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST:\n      const newList = {\n        title: \"third list\",\n        cards: [],\n        id: 3\n      };\n      return _objectSpread({}, state, {\n        OperationList: [...state.OperationList, newList]\n      });\n\n    case CONSTANTS.ADD_CARD:\n      {\n        const newCard = {\n          id: 4\n        };\n        const newOperationList = state.OperationList.map(list => {\n          if (list.id === action.payload.listID) {\n            return _objectSpread({}, list, {\n              cards: [...list.cards, newCard]\n            });\n          } else {\n            return list;\n          }\n        });\n        return _objectSpread({}, state, {\n          cardsLists: newCardsList\n        });\n      }\n  }\n\n  return state;\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/דנה פסח/Desktop/FinalProject/final/src/reducers/rootReducer.js"],"names":["CONSTANTS","initialState","title","OperationList","id","cards","rootReducer","state","action","type","ADD_LIST","newList","ADD_CARD","newCard","newOperationList","map","list","payload","listID","cardsLists","newCardsList"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,YAAxB;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,mBADU;AAEjBC,EAAAA,aAAa,EAAE,CACZ;AACIC,IAAAA,EAAE,EAAC,CADP;AAEIF,IAAAA,KAAK,EAAE,YAFX;AAGIG,IAAAA,KAAK,EAAC,CACF;AAACD,MAAAA,EAAE,EAAC;AAAJ,KADE,EAEF;AAACA,MAAAA,EAAE,EAAC;AAAJ,KAFE;AAHV,GADY,EASZ;AACCA,IAAAA,EAAE,EAAC,CADJ;AAECF,IAAAA,KAAK,EAAE,aAFR;AAGCG,IAAAA,KAAK,EAAC,CACF;AAACD,MAAAA,EAAE,EAAC;AAAJ,KADE,EAEF;AAACA,MAAAA,EAAE,EAAC;AAAJ,KAFE;AAHP,GATY;AAFE,CAArB;;AAsBA,MAAME,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAiC;AACjD,UAAOA,MAAM,CAACC,IAAd;AACA,SAAKT,SAAS,CAACU,QAAf;AACI,YAAMC,OAAO,GAAG;AACZT,QAAAA,KAAK,EAAC,YADM;AAEZG,QAAAA,KAAK,EAAE,EAFK;AAGZD,QAAAA,EAAE,EAAG;AAHO,OAAhB;AAKJ,+BAAWG,KAAX;AAAiBJ,QAAAA,aAAa,EAAE,CAAC,GAAGI,KAAK,CAACJ,aAAV,EAAyBQ,OAAzB;AAAhC;;AAEA,SAAKX,SAAS,CAACY,QAAf;AAAwB;AACpB,cAAMC,OAAO,GAAG;AACZT,UAAAA,EAAE,EAAC;AADS,SAAhB;AAGD,cAAMU,gBAAgB,GAAEP,KAAK,CAACJ,aAAN,CAAoBY,GAApB,CAAyBC,IAAI,IAAI;AACpD,cAAGA,IAAI,CAACZ,EAAL,KAAYI,MAAM,CAACS,OAAP,CAAeC,MAA9B,EAAqC;AACjC,qCACOF,IADP;AAEIX,cAAAA,KAAK,EAAC,CAAC,GAAGW,IAAI,CAACX,KAAT,EAAgBQ,OAAhB;AAFV;AAIH,WALD,MAKK;AACD,mBAAOG,IAAP;AACH;AACJ,SATsB,CAAxB;AAWC,iCAAWT,KAAX;AAAkBY,UAAAA,UAAU,EAAEC;AAA9B;AACC;AAzBL;;AA8BA,SAAOb,KAAP;AACH,CAhCD;;AAkCA,eAAeD,WAAf","sourcesContent":["import {CONSTANTS} from \"../Actions\";\r\nconst initialState = {\r\n    title: \"This is the title\",\r\n    OperationList: [\r\n       {\r\n           id:0,\r\n           title: 'First List',\r\n           cards:[\r\n               {id:0},\r\n               {id:1}\r\n           ]\r\n       },\r\n       {\r\n        id:1,\r\n        title: 'Second List',\r\n        cards:[\r\n            {id:0},\r\n            {id:1}\r\n        ]\r\n        }\r\n    ]\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n    case CONSTANTS.ADD_LIST:\r\n        const newList = {\r\n            title:\"third list\",\r\n            cards: [] , \r\n            id : 3, \r\n        }\r\n    return {...state,OperationList: [...state.OperationList, newList]};\r\n    \r\n    case CONSTANTS.ADD_CARD:{\r\n        const newCard = {\r\n            id:4\r\n        } \r\n       const newOperationList= state.OperationList.map (list => {\r\n            if(list.id === action.payload.listID){\r\n                return{\r\n                    ...list,\r\n                    cards:[...list.cards, newCard]\r\n                }\r\n            }else{\r\n                return list;\r\n            }\r\n        });   \r\n\r\n        return {...state, cardsLists: newCardsList};\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}