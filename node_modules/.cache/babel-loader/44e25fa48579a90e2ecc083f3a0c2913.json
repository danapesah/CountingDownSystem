{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D3\\u05E0\\u05D4 \\u05E4\\u05E1\\u05D7\\\\Desktop\\\\FinalProject\\\\final\\\\src\\\\operationSystem\\\\countDownWindow\\\\MainCountDownComponent.js\";\nimport React, { Component } from 'react';\nimport TrelloList from \"./TrelloList\";\nimport { connect } from 'react-redux';\nimport TrelloActionButton from './TrelloActionButton';\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { sortCountDown } from \"../../Actions\";\nimport { refreshCountDown } from '../../Actions';\n\nclass MainCountDownComponent extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onDragEnd = result => {\n      //a function that will run when dragging ends\n      const destination = result.destination,\n            source = result.source,\n            draggableId = result.draggableId;\n\n      if (!destination) {\n        return;\n      }\n\n      this.props.dispatch(sortCountDown(source.droppableId, destination.droppableId, source.index, destination.index, draggableId));\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.props.dispatch(refreshCountDown());\n    }, 1000);\n  }\n\n  render() {\n    const lists = this.props.lists; // const {startTimer}=this.props;\n\n    console.log(lists.cardsLists);\n    return React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Count Down Window\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, lists.startTimer.calendar()), React.createElement(\"div\", {\n      style: styles.listsContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, lists.cardsLists.map(list => React.createElement(TrelloList, {\n      listID: list.id,\n      key: list.id,\n      title: list.title,\n      cards: list.cards,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(TrelloActionButton, {\n      list: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst styles = {\n  listsContainer: {\n    display: \"flex\",\n    flexDirection: \"row\"\n  }\n};\n\nconst mapStateToProps = state => ({\n  lists: state.lists // startTimer:state.startTimer\n\n});\n\nexport default connect(mapStateToProps)(MainCountDownComponent);","map":{"version":3,"sources":["C:/Users/דנה פסח/Desktop/FinalProject/final/src/operationSystem/countDownWindow/MainCountDownComponent.js"],"names":["React","Component","TrelloList","connect","TrelloActionButton","DragDropContext","sortCountDown","refreshCountDown","MainCountDownComponent","onDragEnd","result","destination","source","draggableId","props","dispatch","droppableId","index","componentDidMount","setInterval","render","lists","console","log","cardsLists","startTimer","calendar","styles","listsContainer","map","list","id","title","cards","display","flexDirection","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAAQC,eAAR,QAA8B,qBAA9B;AACA,SAAQC,aAAR,QAA4B,eAA5B;AACA,SAAQC,gBAAR,QAA+B,eAA/B;;AAEA,MAAMC,sBAAN,SAAqCP,SAArC,CAA+C;AAAA;AAAA;;AAAA,SAC7CQ,SAD6C,GAChCC,MAAD,IAAU;AACpB;AADoB,YAEbC,WAFa,GAEuBD,MAFvB,CAEbC,WAFa;AAAA,YAEAC,MAFA,GAEuBF,MAFvB,CAEAE,MAFA;AAAA,YAEQC,WAFR,GAEuBH,MAFvB,CAEQG,WAFR;;AAGpB,UAAI,CAACF,WAAL,EAAiB;AACf;AACD;;AACD,WAAKG,KAAL,CAAWC,QAAX,CACET,aAAa,CACXM,MAAM,CAACI,WADI,EAEXL,WAAW,CAACK,WAFD,EAGXJ,MAAM,CAACK,KAHI,EAIXN,WAAW,CAACM,KAJD,EAKXJ,WALW,CADf;AASD,KAhB4C;AAAA;;AAkB7CK,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,WAAW,CAAC,MAAM;AAChB,WAAKL,KAAL,CAAWC,QAAX,CAAoBR,gBAAgB,EAApC;AACD,KAFU,EAER,IAFQ,CAAX;AAGD;;AAEDa,EAAAA,MAAM,GACN;AAAA,UACSC,KADT,GACkB,KAAKP,KADvB,CACSO,KADT,EAEE;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB;AACA,WACE,oBAAC,eAAD;AAAmB,MAAA,SAAS,EAAG,KAAKf,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADK,EAER;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMY,KAAK,CAACI,UAAN,CAAiBC,QAAjB,EAAN,CAFQ,EAGH;AAAK,MAAA,KAAK,EAAEC,MAAM,CAACC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIP,KAAK,CAACG,UAAN,CAAiBK,GAAjB,CAAqBC,IAAI,IAC1B,oBAAC,UAAD;AAAY,MAAA,MAAM,EAAEA,IAAI,CAACC,EAAzB;AAA6B,MAAA,GAAG,EAAGD,IAAI,CAACC,EAAxC;AAA4C,MAAA,KAAK,EAAID,IAAI,CAACE,KAA1D;AAAiE,MAAA,KAAK,EAAIF,IAAI,CAACG,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,CADJ,EAGC,oBAAC,kBAAD;AAAoB,MAAA,IAAI,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CAHG,CADN,CADF;AAgBD;;AA7C4C;;AAgD/C,MAAMN,MAAM,GAAG;AACbC,EAAAA,cAAc,EACd;AACEM,IAAAA,OAAO,EAAC,MADV;AAEEC,IAAAA,aAAa,EAAC;AAFhB;AAFa,CAAf;;AAOA,MAAMC,eAAe,GAAIC,KAAD,KAAW;AACjChB,EAAAA,KAAK,EAAEgB,KAAK,CAAChB,KADoB,CAEjC;;AAFiC,CAAX,CAAxB;;AAKA,eAAelB,OAAO,CAACiC,eAAD,CAAP,CAA0B5B,sBAA1B,CAAf","sourcesContent":["import React , {Component} from 'react'\nimport TrelloList from \"./TrelloList\"\nimport {connect } from 'react-redux'\nimport TrelloActionButton from './TrelloActionButton'\nimport {DragDropContext} from \"react-beautiful-dnd\"\nimport {sortCountDown} from \"../../Actions\"\nimport {refreshCountDown} from '../../Actions'\n\nclass MainCountDownComponent extends Component {\n  onDragEnd = (result)=>{\n    //a function that will run when dragging ends\n    const {destination, source, draggableId }= result;\n    if (!destination){\n      return;\n    }\n    this.props.dispatch(\n      sortCountDown(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId\n      )\n    );\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      this.props.dispatch(refreshCountDown())\n    }, 1000);\n  }\n\n  render ()\n  {\n    const {lists} = this.props;\n    // const {startTimer}=this.props;\n    console.log(lists.cardsLists);\n    return (\n      <DragDropContext   onDragEnd= {this.onDragEnd} > \n            <div>\n       <div>Count Down Window</div>\n    <div>{lists.startTimer.calendar()}</div>\n         <div style={styles.listsContainer}>\n            {lists.cardsLists.map(list => \n          ( <TrelloList listID={list.id} key ={list.id} title = {list.title} cards = {list.cards}  />))}\n          <TrelloActionButton list />\n\n       </div>\n      </div>\n      \n      </DragDropContext>\n   \n    );\n  }\n  \n}\nconst styles = {\n  listsContainer:\n  {\n    display:\"flex\",\n    flexDirection:\"row\",\n  }\n};\nconst mapStateToProps = (state)=> ({\n  lists: state.lists\n  // startTimer:state.startTimer\n})\n\nexport default connect(mapStateToProps) (MainCountDownComponent);"]},"metadata":{},"sourceType":"module"}